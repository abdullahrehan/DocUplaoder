// import React, { useEffect, useState } from 'react'
// import wordPic from '../Pics/wordPic.png'
// import wordPic2 from '../Pics/wordPic2.png'
// import crossPic from '../Pics/crossIcon.png'
// import DocumentSaverText from '../Pics/DocumentSaverText.png'
// import PopUp from '../PopUp/PopUp.js'
// import loaderPic from '../Pics/loader.gif'
// import axios from 'axios'
// import './Main.css'

// function Main() {

//     const [uploadDocument, setUploadDocument] = useState()
//     const [deletePopup, setdeletePopup] = useState(false)
//     const [filename, setfilename] = useState()
//     const [uploadFile, setuploadFile] = useState(false)
//     const [fileloadLoader, setfileloadLoader] = useState(true)
//     const [file, setFile] = useState();
//     const [wordFile, setwordFile] = useState();
//     const [DocumentationAvailable, setDocumentationAvailable] = useState(false);


//     // ----------- Load File Pic ----------- //
    
//     var loadFile = (event) => {

//         if (file != null) { setuploadFile(true) }
       
//     }

//     const ServerData=()=>{

//         axios.get('http://localhost:3100')
//             .then(response => { 
//                 if(response.data.status=="ok"){
//                 setFile(response.data.content[0].doc); 
//                 setfileloadLoader(false)
//                 console.log(response.data[0].doc)  
//                 setUploadDocument("Data Loaded")           
//             }
//             else{

//                 setUploadDocument("Something's Wrong")           
            
//             }
//         })

//     }

//     // ----------- Display Documentation Data From File ----------- //
    
//     const showDocumentation = async () => {

//         await axios.get('http://localhost:3100/checkdocument')
//             .then(res => { 
//                 console.log(res.data);
//                 if(res.data=="file avilable"){
//                     ServerData()
//                     setDocumentationAvailable(true)
//                 }
//                 else if(res.data=="file not avilable"){
//                      console.log(res.data);
//                      setDocumentationAvailable(false)
//                 }
                
//         })

//         .catch(error => console.log(error));
        
//     };

//     // ----------- Help to Stringify Circular Structure ----------- //

//     const replacerFunc = () => {
//         const visited = new WeakSet();
//         return (key, value) => {
//           if (typeof value === "object" && value !== null) {
//             if (visited.has(value)) {
//               return;
//             }
//             visited.add(value);
//           }
//           return value;
//         };
//       };


//     // ----------- Send File To Database and Store Images ----------- //
    
//     const submit2 = async (e) => {
        
//         const form2 = new FormData();
//         form2.append("file",wordFile)
//         console.log(form2.values);

//         const ab = await axios.post('http://localhost:3100/uploadFile', form2)
//         .then((response) => {
//             console.log(response);
//         })
//     }

//     const submit = async (e) => {

//         e.preventDefault()
//         const uploadDiv=document.getElementsByClassName('document-display-div')[0];
//         console.log(uploadDiv.innerHTML);
//         const images=uploadDiv.getElementsByTagName('img');

//         console.log(uploadDiv, 'uploadDiv');
//         console.log(images, 'img');

//         const form = new FormData();

//         for (let index = 0; index < images.length; index++) {
//             form.append("uploadedFile", images[index].getAttribute('src'))
//         }

//         const ab = await axios.post('http://localhost:3100/uploads', form)
//             .then((response) => {
//                 for (let index2 = 0; index2 < images.length; index2++) {

//                     images[index2].setAttribute('src', response.data[index2])
//                 }
//                 return response.data
//             }).then((data)=>{
//                 console.log(uploadDiv,'data');
//                 console.log(uploadDiv.innerHTML,'data');
//                 const b=uploadDiv
//                 console.log(JSON.stringify(b,replacerFunc()),'data2');
//                 axios.post('http://localhost:3100/savedoc', {data: uploadDiv.innerHTML })
//                 .then(response => { console.log(response.data) })
//                 .catch(error => console.log(error));
//             })
//             .catch(error => console.log(error));

//         console.log(e.target.files);
//     }

//     const inputChangeEvent=(e)=>{
//         loadFile(e);
//         console.log(e.target.files);
//         setwordFile(e.target.files[0])
//     }

//     useEffect(()=>{
//         showDocumentation();
//     },[])


//     return (
//         <>
//             <div className='container-fluid d-flex main-div '>
//                 <div className='container-fluid d-flex row'>
//                     <div className='col-md-6 d-flex justify-content-center align-items-center flex-column' style={{ borderLeft: "2px solid black" }}>
//                         <div className='d-flex justify-content-start align-items-center' style={{ height: "40%" }}>
//                             <img src={DocumentSaverText} style={{ height: "30%" }} />
//                         </div>

//                         <div className='submit-form-container d-flex flex-direction-column ' >

//                             <div className='upload-text d-flex justify-content-center h6' >Upload Document</div>

//                             <div className="submit-input-field d-flex align-self-stretch">
//                                 <div style={{ width: "50%", padding: "0% 0% 2% 2%" }} className="d-flex align-items-end flex-column">
//                                     <div className='d-flex justify-content-center align-items-center' style={{ paddingBottom: "5%", height: "60%", width: "100%" }}>
//                                         {uploadFile ?
//                                             <img src={wordPic2} style={{ width: "45%" }} className="word-upload-image " />
//                                             :
//                                             <span className='h6'> Upload File </span>
//                                         }
//                                     </div>
//                                     <div className='d-flex justify-content-center align-items-end ' >
//                                         <form encType="multipart/form-data" method="post" className='submit-form' id="uploadedFile" >
//                                             <input multiple type="file"  name="file" id="formFile" onChange={(e) => inputChangeEvent(e)} style={{ width: "80%" }} />
//                                         </form>
//                                     </div>
//                                     <div className='d-flex justify-content-center align-items-center' style={{ width: "100%", paddingTop: "3%" }}>
//                                         {/* <button className='btn btn-primary' onClick={(e) => submit(e)}>Upload</button> */}
//                                         <button className='btn btn-primary' onClick={(e) => submit2(e)}>Upload</button>
                                        
//                                     </div>
//                                 </div>

//                                 <div className="d-flex justify-content-center align-items-center h6" style={{ width: "50%", borderLeft: "2px solid darkgray" }}>
//                                     {DocumentationAvailable ?
//                                         <div className='d-flex flex-column' style={{height:"100%"}}>
//                                             <div className='d-flex justify-content-end ali' style={{ paddingRight: "3%", cursor: "pointer" ,marginTop:"5%"}}>
//                                                 <img src={crossPic} style={{ width: "7%" }} onClick={() => setdeletePopup(true)} />
//                                             </div>
//                                             <div className='d-flex justify-content-center' style={{ paddingRight: "3%" }}>
//                                                 <img src={wordPic} className="cross-icon" style={{ width: "50%", paddingTop: "5%" }} />
//                                             </div>
//                                             <figcaption className='d-flex justify-content-center' style={{ flexGrow: 1, paddingTop: '5%' }}>Documentation</figcaption>
//                                         </div>
//                                         :
//                                         "No Document Uploaded"}
//                                 </div>
//                             </div>

//                         </div>
//                     </div>

//                     <div className='col-md-6 d-flex align-items-center flex-column' style={{ paddingTop: "1%" }}>
//                         <div className='uploaded-document-name'> Document Name  </div>


//                     </div>
//                     <div className="display-upload-section">
//                         <div className="file-load-loader" style={{display:fileloadLoader?"flex":"none"}}><img src={loaderPic} className="loader"/>                        </div>
                    
//                         <div className='document-display-div' dangerouslySetInnerHTML={{ __html: file }} ></div>
//                     </div>
//                 </div>
//             </div>

//             <PopUp deletePopup={deletePopup} setdeletePopup={(data) => setdeletePopup(data)} />
//         </>
//     )
// }

// export default Main


// // const express = require('express')
// const app = express();
// const bodyParser = require('body-parser');
// var mammoth = require("mammoth");
// const cors = require('cors');
// const multer = require("multer")
// const path = require('path')
// const fs = require('fs');

// const Model = require('./Model/Mongo');
// const cloudinary = require('./utils/cloudinary')

// app.use(cors());
// app.use(bodyParser.json());
// app.use(bodyParser.urlencoded({ extended: false }))

// const port = 3100

// // -------- Multer Documentation Upload ----------- //


// app.use('/public', express.static(path.join(__dirname, 'Uploads')))

// const storage = multer.diskStorage({
//   destination: (req, file, cb) => {
//     cb(null, 'Uploads')
//   },
//   filename: (req, file, cb) => {
//     cb(null, `Documentation${path.extname(file.originalname)}`)
//   }
// })

// const upload = multer({ storage: storage }).single('file')


// // -------- Show Data from MongoDb ----------- //


// app.get('/', (req, res) => {
//   Model.find((err, data) => {
//     res.send({ status: "ok", content: data })
//   })
// })

// // -------- Check if documentation is available ----------- //

// app.get('/checkdocument', (req, res) => {

//   const path = './Uploads/Documentation.docx';

//   if (fs.existsSync(path)) {
//     res.send('file avilable');
//   } else {
//     res.send('file not avilable');
//   }

// })

// app.post("/uploadFile", (req, res) => {
//   // Stuff to be added later
//   console.log("uploadFile");
//   console.log(req.file);
//   upload(req, res, async function (err) {
//     if (err) {
//       res.status(400);
//       throw new Error("Error uploading images.");
//     }
//   })
//   console.log(req.body.uploadedFile);
//   res.send("ok")
// });

// // -------- Convert Doc into Html ----------- //

// app.get('/doc', (req, res) => {

//   try {

//     mammoth.convertToHtml({ path: "demo.docx" })
//       .then(function (result) {
//         var html = result.value;
//         console.log(html);
//         res.send({ status: "ok", content: html })
//       }).done();

//   } catch (error) { res.send('error') }

// })

// // -------- Save Data in MongoDb ----------- //

// app.post('/savedoc', async (req, res) => {

//   const insertNewUserModel = await Model({
//     doc: req.body.data,
//     name: "admin"
//   })
//   insertNewUserModel.save()
//   res.send({ status: "ok", data: req.body.data })

// })

// // -------- Upload Images in Cloudinary and Return Images links ----------- //


// // app.post("/uploads", upload.array("uploadedFile", 10), async (req, res) => {

// //   const a = []
// //   Promise.all(req.body.uploadedFile.map(async (data, index) => {

// //     const result = await cloudinary.uploader.upload(data)
// //     a.push(`${result.secure_url}`);

// //     return result.secure_url
// //   })).then(() => res.send(a))

// // })


// app.listen(port, () => {
//   console.log(`Example app listening on port ${port}`)
// })
// // 